# Generated by Django 4.2.1 on 2023-07-06 15:59

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import utils.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('investor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_one', models.BooleanField(default=False)),
                ('step_two', models.BooleanField(default=False)),
                ('step_three', models.BooleanField(default=False)),
                ('project_title', models.CharField(blank=True, max_length=64)),
                ('business_description', models.CharField(blank=True, validators=[utils.utils.validate_100_word_limit])),
                ('launch_status', models.CharField(choices=[('public', 'Yes, it’s public'), ('public_beta', 'Yes, it’s in public Beta'), ('private_beta', 'Yes, it’s in private Beta'), ('no', 'No')], default='no', max_length=20)),
                ('industry', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('fintech', 'Fintech'), ('health', 'Health'), ('smart_cities', 'Smart Cities'), ('biotech', 'Biotech'), ('collaboration', 'Collaboration'), ('entertainment', 'Entertainment'), ('it_tools', 'IT Tools'), ('security', 'Security'), ('sports', 'Sports'), ('real_estate', 'Real Estate'), ('transportation', 'Transportation'), ('media', 'Media'), ('hr', 'HR'), ('education', 'Education'), ('marketing', 'Marketing'), ('customer_success', 'Customer Success'), ('retail', 'Retail'), ('ecommerce', 'eCommerce'), ('industrial', 'Industrial'), ('software', 'Software (Sector-Agnostic)')], max_length=100), blank=True, null=True, size=None)),
                ('vertical', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('adtech_media_tech', 'Adtech / Media tech'), ('advanced_manufacturing', 'Advanced manufacturing'), ('agtech_farmtech', 'Agtech / Farmtech'), ('ai_ml', 'Artificial intelligence and machine learning (AI/ML)'), ('audiotech', 'Audiotech'), ('augmented_reality', 'Augmented reality (AR)'), ('autonomous_cars', 'Autonomous cars'), ('b2b_payments', 'B2B payments'), ('beauty', 'Beauty'), ('big_data', 'Big Data'), ('biotech', 'Biotech'), ('cannabis', 'Cannabis'), ('carsharing', 'Carsharing'), ('cleantech', 'Cleantech'), ('climate_tech', 'Climate tech'), ('cloudtech_devops', 'Cloudtech and DevOps'), ('construction_technology', 'Construction technology'), ('cryptocurrency_blockchain', 'Cryptocurrency and blockchain'), ('cybersecurity', 'Cybersecurity'), ('deeptech', 'Deeptech'), ('digital_health', 'Digital health'), ('ecommerce', 'Ecommerce'), ('edtech', 'Edtech'), ('ephemeral_content', 'Ephemeral content'), ('esports_sport_tech', 'eSports / Sport tech'), ('fashiontech', 'Fashiontech'), ('femtech', 'Femtech'), ('fintech', 'Fintech'), ('foodtech', 'Foodtech'), ('gaming', 'Gaming'), ('healthtech', 'Healthtech'), ('hrtech', 'HRtech'), ('impact_investing', 'Impact investing'), ('industrials', 'Industrials'), ('infrastructure', 'Infrastructure'), ('insurtech', 'Insurtech'), ('iot', 'Internet of Things (IoT)'), ('legal_tech', 'Legal tech'), ('life_sciences', 'Life sciences'), ('lohas_wellness', 'Lifestyles of Health and Sustainability (LOHAS) and wellness'), ('logitech_logistics', 'Logitech / Logistics'), ('manufacturing', 'Manufacturing'), ('marketing_tech', 'Marketing tech'), ('micro_mobility', 'Micro-mobility'), ('mobile', 'Mobile'), ('mobile_commerce', 'Mobile commerce'), ('mobility_tech', 'Mobility tech'), ('mortgage_tech', 'Mortgage tech'), ('nanotechnology', 'Nanotechnology'), ('oil_gas', 'Oil and gas'), ('oncology', 'Oncology'), ('pet_tech', 'Pet tech'), ('proptech', 'Real estate tech / Proptech'), ('restaurant_tech', 'Restaurant tech'), ('ridesharing', 'Ridesharing'), ('robotics_drones', 'Robotics and drones'), ('saas', 'Software as a service (SaaS)'), ('space_tech', 'Space tech'), ('supply_chain', 'Supply chain technology'), ('sustainability', 'Sustainability'), ('traveltech', 'Traveltech'), ('tmt', 'Technology, media and telecommunications (TMT)'), ('virtual_reality', 'Virtual reality (VR)'), ('wearables_quantified_self', 'Wearables and quantified self'), ('3d_printing', '3D printing')], max_length=64), blank=True, null=True, size=None)),
                ('incorporation_location', models.CharField(blank=True, max_length=100)),
                ('headquarters_location', models.CharField(blank=True, max_length=100)),
                ('website', models.URLField(blank=True, null=True)),
                ('overview', models.CharField(blank=True, validators=[utils.utils.validate_1000_word_limit])),
                ('pitch', models.FileField(blank=True, upload_to=utils.utils.generate_pitch_filename)),
                ('stage', models.CharField(blank=True, choices=[('bootstrapping', 'Bootstrapping stage'), ('pre_seed', 'Pre-seed stage'), ('seed', 'Seed stage'), ('growth', 'Growth stage'), ('series_a', 'Growth stage - Series A'), ('series_b', 'Growth stage - Series B'), ('series_c', 'Growth stage - Series C and C+')], max_length=100)),
                ('sales_type', models.CharField(choices=[('B2B', 'B2B'), ('B2C', 'B2C'), ('B2G', 'B2G'), ('C2C', 'C2C'), ('B2B2C', 'B2B2C'), ('other', 'Other/Not sure')], default='other', max_length=10)),
                ('business_model', models.CharField(blank=True, validators=[utils.utils.validate_200_word_limit])),
                ('revenue_record_six_month', models.IntegerField(default=0)),
                ('target_customers_location', models.CharField(blank=True, choices=[('africa', 'Africa (excluding North Africa)'), ('australia_new_zealand', 'Australia and New Zealand'), ('east_asia', 'East Asia'), ('europe', 'Europe'), ('latin_america', 'Latin America'), ('mena', 'MENA (Middle East and North Africa)'), ('north_america', 'North America (Canada, USA, Mexico)'), ('south_asia', 'South Asia'), ('south_east_asia', 'South East Asia')], max_length=30)),
                ('problem_solution', models.CharField(blank=True, validators=[utils.utils.validate_200_word_limit])),
                ('regional_competitors', models.CharField(blank=True, validators=[utils.utils.validate_100_word_limit])),
                ('international_competitors', models.CharField(blank=True, validators=[utils.utils.validate_100_word_limit])),
                ('competitive_advantage', models.CharField(blank=True, validators=[utils.utils.validate_150_word_limit])),
                ('monthly_burn_rate', models.IntegerField(default=0)),
                ('current_cash_balance', models.IntegerField(default=0)),
                ('already_raised_money', models.BooleanField(default=False)),
                ('number_of_full_time_employees', models.PositiveIntegerField(default=0)),
                ('number_of_part_time_employees', models.PositiveIntegerField(default=0)),
                ('past_companies_bool', models.BooleanField(default=False)),
                ('past_companies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), blank=True, null=True, size=None)),
                ('pitch_deck', models.FileField(null=True, upload_to=utils.utils.generate_pitch_video_filename)),
                ('risk_analysis', models.BooleanField(default=False)),
                ('persona', models.BooleanField(default=False)),
                ('aws_identity_verification', models.BooleanField(default=False)),
                ('signed_ncnd', models.FileField(blank=True, null=True, upload_to=utils.utils.generate_signed_ncnd_filename)),
            ],
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_availability', models.BooleanField(default=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField(blank=True)),
                ('date', models.DateField()),
                ('investor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='investor.investor')),
            ],
        ),
        migrations.CreateModel(
            name='Teammate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('family_name', models.CharField(max_length=50)),
                ('age', models.IntegerField(choices=[(18, '18-24'), (25, '25-34'), (35, '35-44'), (45, '45-54'), (55, '55+')])),
                ('education_level', models.CharField(choices=[('high_school', 'High School'), ('bachelors', "Bachelor's Degree"), ('masters', "Master's Degree"), ('phd', 'PhD'), ('other', 'Other')], max_length=20)),
                ('country_of_residence', models.CharField(max_length=50)),
                ('nationality', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('linkedin_page', models.URLField(blank=True, null=True)),
                ('position_at_company', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalTeammate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('family_name', models.CharField(max_length=50)),
                ('age', models.IntegerField(choices=[(18, '18-24'), (25, '25-34'), (35, '35-44'), (45, '45-54'), (55, '55+')])),
                ('education_level', models.CharField(choices=[('high_school', 'High School'), ('bachelors', "Bachelor's Degree"), ('masters', "Master's Degree"), ('phd', 'PhD'), ('other', 'Other')], max_length=20)),
                ('country_of_residence', models.CharField(max_length=50)),
                ('nationality', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('linkedin_page', models.URLField(blank=True, null=True)),
                ('position_at_company', models.CharField(max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical teammate',
                'verbose_name_plural': 'historical teammates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompany',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('step_one', models.BooleanField(default=False)),
                ('step_two', models.BooleanField(default=False)),
                ('step_three', models.BooleanField(default=False)),
                ('project_title', models.CharField(blank=True, max_length=64)),
                ('business_description', models.CharField(blank=True, validators=[utils.utils.validate_100_word_limit])),
                ('launch_status', models.CharField(choices=[('public', 'Yes, it’s public'), ('public_beta', 'Yes, it’s in public Beta'), ('private_beta', 'Yes, it’s in private Beta'), ('no', 'No')], default='no', max_length=20)),
                ('industry', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('fintech', 'Fintech'), ('health', 'Health'), ('smart_cities', 'Smart Cities'), ('biotech', 'Biotech'), ('collaboration', 'Collaboration'), ('entertainment', 'Entertainment'), ('it_tools', 'IT Tools'), ('security', 'Security'), ('sports', 'Sports'), ('real_estate', 'Real Estate'), ('transportation', 'Transportation'), ('media', 'Media'), ('hr', 'HR'), ('education', 'Education'), ('marketing', 'Marketing'), ('customer_success', 'Customer Success'), ('retail', 'Retail'), ('ecommerce', 'eCommerce'), ('industrial', 'Industrial'), ('software', 'Software (Sector-Agnostic)')], max_length=100), blank=True, null=True, size=None)),
                ('vertical', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('adtech_media_tech', 'Adtech / Media tech'), ('advanced_manufacturing', 'Advanced manufacturing'), ('agtech_farmtech', 'Agtech / Farmtech'), ('ai_ml', 'Artificial intelligence and machine learning (AI/ML)'), ('audiotech', 'Audiotech'), ('augmented_reality', 'Augmented reality (AR)'), ('autonomous_cars', 'Autonomous cars'), ('b2b_payments', 'B2B payments'), ('beauty', 'Beauty'), ('big_data', 'Big Data'), ('biotech', 'Biotech'), ('cannabis', 'Cannabis'), ('carsharing', 'Carsharing'), ('cleantech', 'Cleantech'), ('climate_tech', 'Climate tech'), ('cloudtech_devops', 'Cloudtech and DevOps'), ('construction_technology', 'Construction technology'), ('cryptocurrency_blockchain', 'Cryptocurrency and blockchain'), ('cybersecurity', 'Cybersecurity'), ('deeptech', 'Deeptech'), ('digital_health', 'Digital health'), ('ecommerce', 'Ecommerce'), ('edtech', 'Edtech'), ('ephemeral_content', 'Ephemeral content'), ('esports_sport_tech', 'eSports / Sport tech'), ('fashiontech', 'Fashiontech'), ('femtech', 'Femtech'), ('fintech', 'Fintech'), ('foodtech', 'Foodtech'), ('gaming', 'Gaming'), ('healthtech', 'Healthtech'), ('hrtech', 'HRtech'), ('impact_investing', 'Impact investing'), ('industrials', 'Industrials'), ('infrastructure', 'Infrastructure'), ('insurtech', 'Insurtech'), ('iot', 'Internet of Things (IoT)'), ('legal_tech', 'Legal tech'), ('life_sciences', 'Life sciences'), ('lohas_wellness', 'Lifestyles of Health and Sustainability (LOHAS) and wellness'), ('logitech_logistics', 'Logitech / Logistics'), ('manufacturing', 'Manufacturing'), ('marketing_tech', 'Marketing tech'), ('micro_mobility', 'Micro-mobility'), ('mobile', 'Mobile'), ('mobile_commerce', 'Mobile commerce'), ('mobility_tech', 'Mobility tech'), ('mortgage_tech', 'Mortgage tech'), ('nanotechnology', 'Nanotechnology'), ('oil_gas', 'Oil and gas'), ('oncology', 'Oncology'), ('pet_tech', 'Pet tech'), ('proptech', 'Real estate tech / Proptech'), ('restaurant_tech', 'Restaurant tech'), ('ridesharing', 'Ridesharing'), ('robotics_drones', 'Robotics and drones'), ('saas', 'Software as a service (SaaS)'), ('space_tech', 'Space tech'), ('supply_chain', 'Supply chain technology'), ('sustainability', 'Sustainability'), ('traveltech', 'Traveltech'), ('tmt', 'Technology, media and telecommunications (TMT)'), ('virtual_reality', 'Virtual reality (VR)'), ('wearables_quantified_self', 'Wearables and quantified self'), ('3d_printing', '3D printing')], max_length=64), blank=True, null=True, size=None)),
                ('incorporation_location', models.CharField(blank=True, max_length=100)),
                ('headquarters_location', models.CharField(blank=True, max_length=100)),
                ('website', models.URLField(blank=True, null=True)),
                ('overview', models.CharField(blank=True, validators=[utils.utils.validate_1000_word_limit])),
                ('pitch', models.TextField(blank=True, max_length=100)),
                ('stage', models.CharField(blank=True, choices=[('bootstrapping', 'Bootstrapping stage'), ('pre_seed', 'Pre-seed stage'), ('seed', 'Seed stage'), ('growth', 'Growth stage'), ('series_a', 'Growth stage - Series A'), ('series_b', 'Growth stage - Series B'), ('series_c', 'Growth stage - Series C and C+')], max_length=100)),
                ('sales_type', models.CharField(choices=[('B2B', 'B2B'), ('B2C', 'B2C'), ('B2G', 'B2G'), ('C2C', 'C2C'), ('B2B2C', 'B2B2C'), ('other', 'Other/Not sure')], default='other', max_length=10)),
                ('business_model', models.CharField(blank=True, validators=[utils.utils.validate_200_word_limit])),
                ('revenue_record_six_month', models.IntegerField(default=0)),
                ('target_customers_location', models.CharField(blank=True, choices=[('africa', 'Africa (excluding North Africa)'), ('australia_new_zealand', 'Australia and New Zealand'), ('east_asia', 'East Asia'), ('europe', 'Europe'), ('latin_america', 'Latin America'), ('mena', 'MENA (Middle East and North Africa)'), ('north_america', 'North America (Canada, USA, Mexico)'), ('south_asia', 'South Asia'), ('south_east_asia', 'South East Asia')], max_length=30)),
                ('problem_solution', models.CharField(blank=True, validators=[utils.utils.validate_200_word_limit])),
                ('regional_competitors', models.CharField(blank=True, validators=[utils.utils.validate_100_word_limit])),
                ('international_competitors', models.CharField(blank=True, validators=[utils.utils.validate_100_word_limit])),
                ('competitive_advantage', models.CharField(blank=True, validators=[utils.utils.validate_150_word_limit])),
                ('monthly_burn_rate', models.IntegerField(default=0)),
                ('current_cash_balance', models.IntegerField(default=0)),
                ('already_raised_money', models.BooleanField(default=False)),
                ('number_of_full_time_employees', models.PositiveIntegerField(default=0)),
                ('number_of_part_time_employees', models.PositiveIntegerField(default=0)),
                ('past_companies_bool', models.BooleanField(default=False)),
                ('past_companies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), blank=True, null=True, size=None)),
                ('pitch_deck', models.TextField(max_length=100, null=True)),
                ('risk_analysis', models.BooleanField(default=False)),
                ('persona', models.BooleanField(default=False)),
                ('aws_identity_verification', models.BooleanField(default=False)),
                ('signed_ncnd', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical company',
                'verbose_name_plural': 'historical companys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
